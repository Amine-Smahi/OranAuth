// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using OranAuth.DataLayer.Context;

namespace OranAuth.DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    internal class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OranAuth.DomainClasses.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)")
                    .HasMaxLength(450);

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("Roles");
            });

            modelBuilder.Entity("OranAuth.DomainClasses.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("DisplayName")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<DateTimeOffset?>("LastLoggedIn")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("SerialNumber")
                    .HasColumnType("nvarchar(450)")
                    .HasMaxLength(450);

                b.Property<string>("Username")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)")
                    .HasMaxLength(450);

                b.HasKey("Id");

                b.HasIndex("Username")
                    .IsUnique();

                b.ToTable("Users");
            });

            modelBuilder.Entity("OranAuth.DomainClasses.UserRole", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("RoleId")
                    .HasColumnType("int");

                b.HasKey("UserId", "RoleId");

                b.HasIndex("RoleId");

                b.HasIndex("UserId");

                b.ToTable("UserRoles");
            });

            modelBuilder.Entity("OranAuth.DomainClasses.UserToken", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTimeOffset>("AccessTokenExpiresDateTime")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("AccessTokenHash")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset>("RefreshTokenExpiresDateTime")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("RefreshTokenIdHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)")
                    .HasMaxLength(450);

                b.Property<string>("RefreshTokenIdHashSource")
                    .HasColumnType("nvarchar(450)")
                    .HasMaxLength(450);

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("UserTokens");
            });

            modelBuilder.Entity("OranAuth.DomainClasses.UserRole", b =>
            {
                b.HasOne("OranAuth.DomainClasses.Role", "Role")
                    .WithMany("UserRoles")
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("OranAuth.DomainClasses.User", "User")
                    .WithMany("UserRoles")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("OranAuth.DomainClasses.UserToken", b =>
            {
                b.HasOne("OranAuth.DomainClasses.User", "User")
                    .WithMany("UserTokens")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}